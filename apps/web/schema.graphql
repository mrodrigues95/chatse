schema {
  query: Query
  mutation: Mutation
}

interface Error {
  message: String!
}

"The node interface is implemented by entities that have a global unique identifier."
interface Node {
  id: ID!
}

type AppUser implements Node {
  email: String!
  name: String!
  id: ID!
}

type AuthPayload {
  user: AppUser
  isLoggedIn: Boolean!
}

type LoginPayload {
  authPayload: AuthPayload
  errors: [LoginError!]
}

type LoginUserError implements Error {
  message: String!
}

type LogoutPayload {
  authPayload: AuthPayload
}

type Mutation {
  signUp(input: SignUpInput!): SignUpPayload!
  login(input: LoginInput!): LoginPayload!
  logout: LogoutPayload!
}

type Query {
  "Fetches an object given its ID."
  node("ID of the object." id: ID!): Node
  "Lookup nodes by a list of IDs."
  nodes("The list of node IDs." ids: [ID!]!): [Node]!
  me: AppUser
}

type SignUpPayload {
  authPayload: AuthPayload
  errors: [SignUpError!]
}

type SignupNewUserError implements Error {
  message: String!
}

union LoginError = LoginUserError

union SignUpError = SignupNewUserError

input LoginInput {
  email: String!
  password: String!
}

input SignUpInput {
  input: SignupInput!
}

input SignupInput {
  name: String!
  email: String!
  password: String!
}

enum ApplyPolicy {
  BEFORE_RESOLVER
  AFTER_RESOLVER
  VALIDATION
}

directive @allowAnonymous repeatable on FIELD_DEFINITION

directive @authorize(
  "The name of the authorization policy that determines access to the annotated resource."
  policy: String
  "Roles that are allowed to access the annotated resource."
  roles: [String!]
  "Defines when when the authorize directive shall be applied.By default the authorize directives are applied during the validation phase."
  apply: ApplyPolicy! = BEFORE_RESOLVER
) repeatable on OBJECT | FIELD_DEFINITION

"The `@defer` directive may be provided for fragment spreads and inline fragments to inform the executor to delay the execution of the current fragment to indicate deprioritization of the current fragment. A query with `@defer` directive will cause the request to potentially return multiple responses, where non-deferred data is delivered in the initial response and data deferred is delivered in a subsequent response. `@include` and `@skip` take precedence over `@defer`."
directive @defer(
  "If this argument label has a value other than null, it will be passed on to the result of this defer directive. This label is intended to give client applications a way to identify to which fragment a deferred result belongs to."
  label: String
  "Deferred when true."
  if: Boolean
) on FRAGMENT_SPREAD | INLINE_FRAGMENT

directive @tag(
  name: String!
) repeatable on SCHEMA | SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION
